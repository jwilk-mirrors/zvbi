dnl Process this file with autoconf to produce a configure script.
dnl $Id: configure.in,v 1.48 2005-05-26 04:08:37 mschimek Exp $

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(zvbi, 0.2.16)
AM_CONFIG_HEADER(config.h)
AM_ACLOCAL_INCLUDE(m4)

dnl [current:revision:age]
dnl Any change: ++revision
dnl Interface added: ++current, revision = 0
dnl age = last binary compatible version - current
AC_SUBST(LIBZVBI_SO_VERSION, [7:0:7])

AC_PROG_CC

dnl For header tests only.
AC_PROG_CXX

dnl BSD/GNU extensions.
AC_CHECK_FUNCS(strndup)
AC_CHECK_FUNCS(strlcpy)
AC_CHECK_FUNCS(asprintf)
AC_CHECK_FUNCS(getopt_long)
AC_CHECK_FUNCS(getaddrinfo)

AM_PROG_LIBTOOL

LIBS="$LIBS -lm"

test -e site_def.h || cat <<EOF >site_def.h
/* Site specific definitions */

#ifndef SITE_DEF_H
#define SITE_DEF_H
/* #define BIT_SLICER_LOG 1 */
/* #define CACHE_DEBUG 1 */
/* #define CACHE_STATUS 1 */
/* #define DVB_DEMUX_LOG 1 */
/* #define DVB_MUX_LOG 1 */
/* #define RAW_DECODER_LOG 1 */
/* #define RAW_DECODER_PATTERN_DUMP 1 */
#endif /* SITE_DEF_H */
EOF

dnl
dnl Check how to link pthreads functions.
dnl
AC_CHECK_LIB(pthread, pthread_create,,[
  AC_TRY_LINK(, pthread_create();,,[
    LDFLAGS="$LDFLAGS -pthread"
    AC_TRY_LINK(, pthread_create();,,[
      AC_MSG_ERROR([Unable to link pthread functions])
    ])
  ])
])

dnl
dnl Check for Gnome unicode library or libc 2.1.
dnl (Teletext URE search wchar_t ctype.h functions)
dnl
AC_MSG_CHECKING(whether we are using the GNU C Library 2.1 or newer)
AC_EGREP_CPP([GNU 98765876],[
#include <features.h>
#ifdef __GNU_LIBRARY__
 #if (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 1) || (__GLIBC__ > 2)
  GNU 98765876
 #endif
#endif
],[
  AC_MSG_RESULT([yes])
  AC_DEFINE(HAVE_GLIBC21, 1, [Define if you have GNU C Lib 2.1+])
],[
  AC_MSG_RESULT([no])
  AC_MSG_CHECKING(for unicode library)
  UNICODE_VERSION=`unicode-config --version`
  if test $? -eq 0; then
    AC_DEFINE(HAVE_LIBUNICODE, 1, [Define if you have libunicode])
    AC_MSG_RESULT($UNICODE_VERSION)
    UNICODE_CFLAGS=`unicode-config --cflags`
    UNICODE_LIBS=`unicode-config --libs`
    AC_SUBST(UNICODE_CFLAGS)
    AC_SUBST(UNICODE_LIBS)
  else
    AC_MSG_RESULT([not present - Teletext search disabled])
  fi
])

dnl
dnl Check for iconv() in libc or libiconv.
dnl (Unicode conversions)
dnl
dnl Using m4/iconv.m4 from the gettext package.
dnl
AM_ICONV_LINK
if test "$am_cv_func_iconv" != yes; then
  AC_MSG_ERROR([iconv() not found])
fi
LIBS="$LIBS $LIBICONV"

dnl
dnl Check for png library.
dnl (PNG page export)
dnl
HAVE_PNG="yes"
AC_CHECK_LIB(png, png_destroy_write_struct,
  LIBS="$LIBS -lpng -lz", HAVE_PNG="no", -lz -lm)
if test "$HAVE_PNG" = yes; then
  AC_DEFINE(HAVE_LIBPNG, 1, [Define if you have libpng])
fi

dnl
dnl X libraries.
dnl (Test programs)
dnl
AC_PATH_XTRA
test "$no_x" = yes || X_LIBS="$X_LIBS -lX11"
AM_CONDITIONAL(HAVE_X, [test "$no_x" != yes])

dnl
dnl Enable OS dependent device interfaces.
dnl (Linux videodev.h, videodev2.h, dvb, bktr dependencies)
dnl
enable_v4l_auto=no
enable_dvb_auto=no
enable_bktr_auto=no
enable_proxy_auto=no

case "$host_os" in
  linux*)
    enable_v4l_auto=yes
    enable_dvb_auto=yes
    enable_proxy_auto=yes
    ;;
  freebsd* | kfreebsd*-gnu | openbsd* | netbsd*)
    enable_bktr_auto=yes
    ;;
  *)
    ;;
esac

AC_MSG_CHECKING([whether to build the Video4Linux interface])
AC_ARG_ENABLE(v4l,
  AC_HELP_STRING([--enable-v4l],
  [Include the V4L and V4L2 interface (auto)]),,
  enable_v4l=$enable_v4l_auto)
AC_MSG_RESULT($enable_v4l)
if test "$enable_v4l" = yes; then
  AC_DEFINE(ENABLE_V4L, 1, [Define to build V4L interface])
  AC_DEFINE(ENABLE_V4L2, 1, [Define to build V4L2 / V4L2 2.5 interface])
fi

AC_MSG_CHECKING([whether to build the Linux DVB interface])
AC_ARG_ENABLE(dvb,
  AC_HELP_STRING([--enable-dvb],
  [Include the DVB interface (auto)]),,
  enable_dvb=$enable_dvb_auto)
AC_MSG_RESULT($enable_dvb)
if test "$enable_dvb" = yes; then
  AC_DEFINE(ENABLE_DVB, 1, [Define to build DVB interface])
fi

AC_MSG_CHECKING([whether to build the *BSD bktr driver interface])
AC_ARG_ENABLE(bktr,
  AC_HELP_STRING([--enable-bktr],
  [Include the *BSD bktr driver interface (auto)]),,
  enable_bktr=$enable_bktr_auto)
AC_MSG_RESULT($enable_bktr)
if test "$enable_bktr" = yes; then
  AC_DEFINE(ENABLE_BKTR, 1, [Define to build bktr driver interface])
fi

dnl
dnl Enable vbi proxy
dnl
AC_MSG_CHECKING([whether to build the vbi proxy daemon and interface])
AC_ARG_ENABLE(proxy,
  AC_HELP_STRING([--enable-proxy],
  [Build the vbi proxy daemon and interface (auto)]),,
  enable_proxy=$enable_proxy_auto)
AC_MSG_RESULT($enable_proxy)
if test "$enable_proxy" = yes; then
  AC_DEFINE(ENABLE_PROXY, 1, [Define to build proxy daemon and interface])
  case "$host_os" in
    linux*)
      AC_DEFINE(HAVE_IOCTL_INT_ULONG_DOTS, 1, [ioctl request type])
      ;;
    freebsd* | kfreebsd*-gnu | openbsd* | netbsd*)
      AC_DEFINE(HAVE_IOCTL_INT_ULONG_DOTS, 1, [ioctl request type])
      ;;
    *)
      ;;
  esac
fi
AM_CONDITIONAL(ENABLE_PROXY, [test "$enable_proxy" = yes])

dnl
dnl Native language support.
dnl
AM_GNU_GETTEXT([external], [need-ngettext])
LIBS="$LTLIBINTL $LIBS"
if test "${prefix}" = NONE; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR,
    "${ac_default_prefix}/share/locale", [ld])
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR,
    "${prefix}/share/locale", [ld])
fi

dnl 
dnl Build docs from the sources if Doxygen is installed.
dnl 
AC_CHECK_PROG(HAVE_DOXYGEN, doxygen, yes, no)
AM_CONDITIONAL(HAVE_DOXYGEN, [test "$HAVE_DOXYGEN" = yes])

AC_OUTPUT([
  Makefile
  contrib/Makefile
  daemon/Makefile
  daemon/zvbid.init
  doc/Doxyfile
  doc/Makefile
  m4/Makefile
  src/Makefile
  src/dvb/Makefile
  test/Makefile
  po/Makefile.in
  zvbi.spec
  zvbi-0.2.pc
])
