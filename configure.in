dnl Process this file with autoconf to produce a configure script.
dnl $Id: configure.in,v 1.22 2003-04-06 06:10:38 mschimek Exp $

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(zvbi, 0.2.5)
AM_CONFIG_HEADER(config.h)
AM_ACLOCAL_INCLUDE(m4)

dnl curr (added interf) : rev (of curr) : age (curr-age compat)
AC_SUBST(LIBZVBI_SO_VERSION, [2:0:2])

AC_PROG_CC
AC_PROG_CXX
AM_PROG_LIBTOOL

test -e site_def.h || cat <<EOF >site_def.h
/* Site specific definitions */

#ifndef SITE_DEF_H
#define SITE_DEF_H
#define CACHE_DEBUG 0
#define CACHE_STATUS 0
#endif /* SITE_DEF_H */
EOF

dnl
dnl Check how to link pthreads functions
dnl
AC_CHECK_LIB(pthread, pthread_create,,[
  AC_TRY_LINK(, pthread_create();,,[
    LDFLAGS="$LDFLAGS -pthread"
    AC_TRY_LINK(, pthread_create();,,[
      AC_MSG_ERROR([Unable to link pthread functions])
    ])
  ])
])

dnl
dnl Check for Gnome unicode library or libc 2.1.
dnl (Teletext URE search wchar_t ctype.h functions)
dnl
AC_MSG_CHECKING(whether we are using the GNU C Library 2.1 or newer)
AC_EGREP_CPP([GNU 98765876],[
#include <features.h>
#ifdef __GNU_LIBRARY__
 #if (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 1) || (__GLIBC__ > 2)
  GNU 98765876
 #endif
#endif
],[
  AC_MSG_RESULT([yes])
  AC_DEFINE(HAVE_GLIBC21, 1, [Define if you have GNU C Lib 2.1+])
],[
  AC_MSG_RESULT([no])
  AC_MSG_CHECKING(for unicode library)
  UNICODE_VERSION=`unicode-config --version`
  if test $? -eq 0; then
    AC_DEFINE(HAVE_LIBUNICODE, 1, [Define if you have libunicode])
    AC_MSG_RESULT($UNICODE_VERSION)
    UNICODE_CFLAGS=`unicode-config --cflags`
    UNICODE_LIBS=`unicode-config --libs`
    AC_SUBST(UNICODE_CFLAGS)
    AC_SUBST(UNICODE_LIBS)
  else
    AC_MSG_RESULT([not present - Teletext search disabled])
  fi
])

dnl
dnl Check for iconv() in libc or libiconv.
dnl (Unicode conversions)
dnl
dnl Using m4/iconv.m4 from the gettext package.
dnl
AM_ICONV_LINK
if test "$am_cv_func_iconv" != yes; then
  AC_MSG_ERROR([iconv() not found])
fi
LIBS="$LIBS $LIBICONV"

dnl
dnl Check for png library.
dnl (PNG page export)
dnl
PNG_LIB=""
HAVE_PNG="yes"
AC_CHECK_LIB(png, png_destroy_write_struct, PNG_LIB="-lpng -lz -lm", HAVE_PNG="no", -lz -lm)
if test "x$HAVE_PNG" = "xyes"; then
  AC_DEFINE(HAVE_LIBPNG, 1, [Define if you have libpng])
fi
AC_SUBST(PNG_LIB)

dnl
dnl X libraries.
dnl (Test programs)
dnl
AC_PATH_XTRA
test "x$no_x" = "xyes" || X_LIBS="$X_LIBS -lX11"

dnl
dnl GNU getopt_long
dnl
AC_CHECK_FUNCS(getopt_long)

dnl
dnl Enable OS dependent device interfaces.
dnl (Linux videodev.h, videodev2.h, bktr dependencies)
dnl
auto_enable_v4l=no
auto_enable_bktr=no

case "`uname -s`" in
  Linux)
    auto_enable_v4l=yes
    ;;
  OpenBSD | FreeBSD | NetBSD | BSDi)
    auto_enable_bktr=yes
    ;;
  *)
    ;;
esac

AC_MSG_CHECKING(whether to build the Video4Linux interface)
AC_ARG_ENABLE(v4l,
  AC_HELP_STRING([--enable-v4l], [Include the V4L and V4L2 interface (auto)]),,
  enable_v4l=$auto_enable_v4l)
AC_MSG_RESULT($enable_v4l)
if test "x$enable_v4l" = "xyes"; then
  AC_DEFINE(ENABLE_V4L, 1, [Define to build V4L interface])
  AC_DEFINE(ENABLE_V4L2, 1, [Define to build V4L2 / V4L2 2.5 interface])
fi

AC_MSG_CHECKING(whether to build the *BSD bktr driver interface)
AC_ARG_ENABLE(bktr,
  AC_HELP_STRING([--enable-bktr], [Include the *BSD bktr driver interface (auto)]),,
  enable_bktr=$auto_enable_bktr)
AC_MSG_RESULT($enable_bktr)
if test "x$enable_bktr" = "xyes"; then
  AC_DEFINE(ENABLE_BKTR, 1, [Define to build bktr driver interface])
fi

dnl
dnl Native language support.
dnl
AM_GNU_GETTEXT([external], [need-ngettext])
LIBS="$LTLIBINTL $LIBS"
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/share/locale", [ld])
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/share/locale", [ld])
fi

dnl 
dnl Build docs from the sources if Doxygen is installed.
dnl 
AC_CHECK_PROG(HAVE_DOXYGEN, doxygen, yes, no)
AM_CONDITIONAL(HAVE_DOXYGEN, [test "x$HAVE_DOXYGEN" = "xyes"])

AC_OUTPUT([
  Makefile
  po/Makefile.in
  src/Makefile
  test/Makefile
  doc/Makefile
  doc/Doxyfile
  contrib/Makefile
  m4/Makefile
  zvbi.spec
])
