dnl Process this file with autoconf to produce a configure script.
dnl $Id: configure.in,v 1.18.2.10 2006-05-07 06:04:58 mschimek Exp $

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(zvbi, 0.3.0cvs)
AM_CONFIG_HEADER(config.h)
AM_ACLOCAL_INCLUDE(m4)

dnl [current:revision:age]
dnl Any change: ++revision
dnl Interface added: ++current, revision = 0
dnl age = last binary compatible version - current
AC_SUBST(LIBZVBI_SO_VERSION, [0:0:0])

dnl Note zvbi-0.3.pc.in and src/Makefile.am need an update when the library
dnl becomes source incompatible: -0.3 -> -0.4, _0_3 -> _0_4.

AC_PROG_CC

dnl For tests only.
AC_PROG_CXX

AM_PROG_LIBTOOL

test -e site_def.h || cat <<EOF >site_def.h
/* Site specific definitions */

#ifndef SITE_DEF_H
#define SITE_DEF_H
/* #define CACHE_DEBUG 1 */
/* #define CACHE_STATUS 1 */
/* #define CACHE_LOCK_TEST 1 */
/* #define TELETEXT_DECODER_CHSW_TEST 1 */
/* #define TELETEXT_DECODER_LOG 1 */
/* #define RAW_DECODER_PATTERN_DUMP 1 */
/* #define TELETEXT_FMT_LOG 1 */
/* #define TELETEXT_PDC_LOG 1 */
/* #define WSS_625_LOG 1 */
#endif /* SITE_DEF_H */
EOF

dnl
dnl Check for BSD/GNU extensions.
dnl If not present we use replacements.
dnl
SAVE_CFLAGS="$CFLAGS"
CFLAGS="$CFLAGS -D_GNU_SOURCE"
AC_CHECK_FUNCS([strndup strlcpy asprintf getopt_long clock_settime])
AC_CHECK_FUNCS([program_invocation_name])
CFLAGS="$SAVE_CFLAGS"

AC_DEFINE(Z_LITTLE_ENDIAN, 1234, [naidne elttiL])
AC_DEFINE(Z_BIG_ENDIAN, 4321, [Big endian])
AC_C_BIGENDIAN(
  AC_DEFINE(Z_BYTE_ORDER, 4321, [Byte order]),
  AC_DEFINE(Z_BYTE_ORDER, 1234, [Byte order]))

dnl
dnl Check how to link pthreads functions.
dnl XXX remove after i/o rewrite.
dnl
AC_CHECK_LIB(pthread, pthread_create,,[
  AC_TRY_LINK(, pthread_create();,,[
    LDFLAGS="$LDFLAGS -pthread"
    AC_TRY_LINK(, pthread_create();,,[
      AC_MSG_ERROR([Unable to link pthread functions])
    ])
  ])
])

dnl
dnl See if struct tm has tm_gmtoff, a BSD/GNU extension.
dnl (Used in test/date.)
dnl
AC_MSG_CHECKING([if struct tm has tm_gmtoff])
AC_COMPILE_IFELSE([
#include <time.h>
int main (void) {
struct tm tm;
tm.tm_gmtoff = 0;
return 0;
}
],[
  AC_MSG_RESULT([yes])
  AC_DEFINE(HAVE_TM_GMTOFF, 1, [Define if struct tm has a tm_gmtoff field])
],[
  AC_MSG_RESULT([no])
])

dnl
dnl Check for Gnome unicode library or libc 2.1.
dnl (Teletext URE search wchar_t ctype.h functions)
dnl
AC_MSG_CHECKING(whether we are using the GNU C Library 2.1 or newer)
AC_EGREP_CPP([GNU 98765876],[
#include <features.h>
#ifdef __GNU_LIBRARY__
 #if (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 1) || (__GLIBC__ > 2)
  GNU 98765876
 #endif
#endif
],[
  AC_MSG_RESULT([yes])
  AC_DEFINE(HAVE_GLIBC21, 1, [Define if you have GNU C Lib 2.1+])
],[
  AC_MSG_RESULT([no])
  AC_MSG_CHECKING(for unicode library)
  UNICODE_VERSION=`unicode-config --version`
  if test $? -eq 0; then
    AC_DEFINE(HAVE_LIBUNICODE, 1, [Define if you have libunicode])
    AC_MSG_RESULT($UNICODE_VERSION)
    UNICODE_CFLAGS=`unicode-config --cflags`
    UNICODE_LIBS=`unicode-config --libs`
    AC_SUBST(UNICODE_CFLAGS)
    AC_SUBST(UNICODE_LIBS)
  else
    AC_MSG_RESULT([not present - Teletext search disabled])
  fi
])

dnl
dnl Check for iconv() in libc or libiconv.
dnl (Unicode conversions)
dnl
dnl Using m4/iconv.m4 from the gettext package.
dnl
AM_ICONV_LINK
if test "$am_cv_func_iconv" != yes; then
  AC_MSG_ERROR([iconv() not found])
fi
LIBS="$LIBS $LIBICONV"

dnl
dnl Check for png library.
dnl (PNG page export)
dnl
PNG_LIB=""
HAVE_PNG="yes"
AC_CHECK_LIB(png, png_destroy_write_struct, PNG_LIB="-lpng -lz -lm", HAVE_PNG="no", -lz -lm)
if test "x$HAVE_PNG" = "xyes"; then
  AC_DEFINE(HAVE_LIBPNG, 1, [Define if you have libpng])
fi
AC_SUBST(PNG_LIB)

dnl
dnl X libraries.
dnl (Test programs)
dnl
AC_PATH_XTRA
test "x$no_x" = "xyes" || X_LIBS="$X_LIBS -lX11"

dnl
dnl Enable OS dependent device interfaces.
dnl (Linux videodev.h, videodev2.h, bktr dependencies)
dnl
enable_v4l_auto=no
enable_bktr_auto=no

case "`uname -s`" in
  Linux)
    enable_v4l_auto=yes
    ;;
  OpenBSD | FreeBSD | NetBSD | BSDi)
    enable_bktr_auto=yes
    ;;
  *)
    ;;
esac

AC_MSG_CHECKING([whether to build the Video4Linux interface])
AC_ARG_ENABLE(v4l,
  AC_HELP_STRING([--enable-v4l],
  [Include the V4L and V4L2 interface (auto)]),,
  enable_v4l=$enable_v4l_auto)
AC_MSG_RESULT($enable_v4l)
if test "$enable_v4l" = yes; then
  AC_DEFINE(ENABLE_V4L, 1, [Define to build V4L interface])
  AC_DEFINE(ENABLE_V4L2, 1, [Define to build V4L2 / V4L2 2.5 interface])

  dnl Linux 2.6.x/x86 defines them only if __GNUC__.
  dnl They're required to compile videodev2.h.
  AC_MSG_CHECKING([if asm/types.h defines __s64 and __u64])
  AC_COMPILE_IFELSE([#include <asm/types.h>
__s64 a = 1;
__u64 b = 2;
  ], [AC_DEFINE(HAVE_S64_U64, 1, [Define if asm/types.h defines __s64 and __u64])
      AC_MSG_RESULT(yes)], [AC_MSG_RESULT(no)])
fi

AC_MSG_CHECKING([whether to build the *BSD bktr driver interface])
AC_ARG_ENABLE(bktr,
  AC_HELP_STRING([--enable-bktr],
  [Include the *BSD bktr driver interface (auto)]),,
  enable_bktr=$enable_bktr_auto)
AC_MSG_RESULT($enable_bktr)
if test "$enable_bktr" = yes; then
  AC_DEFINE(ENABLE_BKTR, 1, [Define to build bktr driver interface])
fi

dnl
dnl Native language support.
dnl
AM_GNU_GETTEXT([external], [need-ngettext])
LIBS="$LTLIBINTL $LIBS"
if test "${prefix}" = NONE; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR,
    "${ac_default_prefix}/share/locale", [ld])
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR,
    "${prefix}/share/locale", [ld])
fi

dnl 
dnl Build docs from the sources if Doxygen is installed.
dnl 
AC_CHECK_PROG(HAVE_DOXYGEN, doxygen, yes, no)
AM_CONDITIONAL(HAVE_DOXYGEN, [test "$HAVE_DOXYGEN" = yes])

AC_OUTPUT([
  Makefile
  po/Makefile.in
  src/Makefile
  test/Makefile
  doc/Makefile
  doc/Doxyfile
  contrib/Makefile
  m4/Makefile
  zvbi.spec
  zvbi-0.3.pc
])
